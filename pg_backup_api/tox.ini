[common]
python_matrix = {37,38,39,310,311}
platforms =
    lin: linux
    mac: darwin
    win: win32

[tox]
min_version = 4.0
requires =
    tox>4
env_list =
    dep
    lint
    py{[common]python_matrix}-type-{lin,mac,win}
    py{[common]python_matrix}-test-{lin,mac,win}
skipsdist = True
toxworkdir = {env:TOX_WORK_DIR:.tox}
skip_missing_interpreters = True

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE = 1
    mac: OPEN_CMD = {env:OPEN_CMD:open}
    lin: OPEN_CMD = {env:OPEN_CMD:xdg-open}
passenv =
    BROWSER
    DISPLAY

[testenv:lint]
description = Lint code with flake8
commands = flake8 {posargs:pg_backup_api setup.py}
deps =
    flake8

[testenv:py{37,38,39,310,311}-test-{lin,win,mac}]
description = Run unit tests with pytest
labels =
    test
commands_pre =
    - {tty:rm -f "{toxworkdir}{/}cov_report_{env_name}_html{/}index.html":true}
    - {tty:rm -f "{toxworkdir}{/}pytest_report_{env_name}.html":true}
commands =
    pytest \
    -p no:cacheprovider \
    -vv \
    --capture=no \
    --cov=pg_backup_api \
    --cov-report=term-missing \
    --cov-append \
    {tty::--cov-report="xml\:{toxworkdir}{/}cov_report.{env_name}.xml"} \
    {tty:--cov-report="html\:{toxworkdir}{/}cov_report_{env_name}_html":} \
    {tty:--html="{toxworkdir}{/}pytest_report_{env_name}.html":} \
    {posargs:pg_backup_api}
commands_post =
    - {tty:{env:OPEN_CMD} "{toxworkdir}{/}cov_report_{env_name}_html{/}index.html":true}
    - {tty:{env:OPEN_CMD} "{toxworkdir}{/}pytest_report_{env_name}.html":true}
deps =
    -r requirements.txt
    -r requirements-test.txt
platform =
    {[common]platforms}
allowlist_externals =
    rm
    true
    {env:OPEN_CMD}

[testenv:dep]
description = Check package dependency problems
commands = pipdeptree -w fail
deps =
    -r requirements.txt
    pipdeptree

[testenv:py{37,38,39,310,311}-type-{lin,mac,win}]
description = Run static type checking with pyright
labels =
    type
deps =
    -r requirements.txt
    pyright
commands = pyright --venvpath {toxworkdir}{/}{envname} {posargs:pg_backup_api}
platform =
    {[common]platforms}

[flake8]
max-line-length = 79

[coverage:run]
omit =
    pg_backup_api/app.py
    pg_backup_api/tests/*
