# -*- coding: utf-8 -*-
# Â© Copyright EnterpriseDB UK Limited 2013-2021
#
# This file is part of Postgres Backup API.
#
# Postgres Backup API is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Postgres Backup API is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Postgres Backup API.  If not, see <http://www.gnu.org/licenses/>.

# This file was autogenerated by OpenAPI Generator.

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pg_backup_api.openapi_server.models.base_model_ import Model
from pg_backup_api.openapi_server.models.last_archived_wal import LastArchivedWal
from pg_backup_api.openapi_server import util

from pg_backup_api.openapi_server.models.last_archived_wal import LastArchivedWal  # noqa: E501

class Wals(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_archived_wal_per_timeline=None):  # noqa: E501
        """Wals - a model defined in OpenAPI

        :param last_archived_wal_per_timeline: The last_archived_wal_per_timeline of this Wals.  # noqa: E501
        :type last_archived_wal_per_timeline: Dict[str, LastArchivedWal]
        """
        self.openapi_types = {
            'last_archived_wal_per_timeline': Dict[str, LastArchivedWal]
        }

        self.attribute_map = {
            'last_archived_wal_per_timeline': 'last_archived_wal_per_timeline'
        }

        self._last_archived_wal_per_timeline = last_archived_wal_per_timeline

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Wals of this Wals.  # noqa: E501
        :rtype: Wals
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_archived_wal_per_timeline(self):
        """Gets the last_archived_wal_per_timeline of this Wals.

        Details of the most recently archived WAL on the Barman server keyed by timeline.   # noqa: E501

        :return: The last_archived_wal_per_timeline of this Wals.
        :rtype: Dict[str, LastArchivedWal]
        """
        return self._last_archived_wal_per_timeline

    @last_archived_wal_per_timeline.setter
    def last_archived_wal_per_timeline(self, last_archived_wal_per_timeline):
        """Sets the last_archived_wal_per_timeline of this Wals.

        Details of the most recently archived WAL on the Barman server keyed by timeline.   # noqa: E501

        :param last_archived_wal_per_timeline: The last_archived_wal_per_timeline of this Wals.
        :type last_archived_wal_per_timeline: Dict[str, LastArchivedWal]
        """
        if last_archived_wal_per_timeline is None:
            raise ValueError("Invalid value for `last_archived_wal_per_timeline`, must not be `None`")  # noqa: E501

        self._last_archived_wal_per_timeline = last_archived_wal_per_timeline
